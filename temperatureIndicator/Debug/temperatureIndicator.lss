
temperatureIndicator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800100  000004e4  00000578  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800128  00800128  000005a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000142e  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000084c  00000000  00000000  00001ad6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000742  00000000  00000000  00002322  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00002a64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b5  00000000  00000000  00002bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ae1  00000000  00000000  00003091  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003b72  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ee       	ldi	r30, 0xE4	; 228
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 32       	cpi	r26, 0x28	; 40
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e2       	ldi	r26, 0x28	; 40
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 32       	cpi	r26, 0x2E	; 46
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a1 01 	call	0x342	; 0x342 <main>
  9e:	0c 94 70 02 	jmp	0x4e0	; 0x4e0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Request>:
{
	DDRD &= ~(1<<DHT_SENSOR);
	while(PIND & (1<<DHT_SENSOR));
	while((PIND & (1<<DHT_SENSOR)) == 0);
	while(PIND & (1<<DHT_SENSOR));
}
  a6:	55 9a       	sbi	0x0a, 5	; 10
  a8:	5d 98       	cbi	0x0b, 5	; 11
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	89 ef       	ldi	r24, 0xF9	; 249
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	80 40       	sbci	r24, 0x00	; 0
  b4:	90 40       	sbci	r25, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <Request+0xa>
  b8:	00 c0       	rjmp	.+0      	; 0xba <Request+0x14>
  ba:	00 00       	nop
  bc:	5d 9a       	sbi	0x0b, 5	; 11
  be:	08 95       	ret

000000c0 <Response>:
  c0:	55 98       	cbi	0x0a, 5	; 10
  c2:	4d 99       	sbic	0x09, 5	; 9
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <Response+0x2>
  c6:	4d 9b       	sbis	0x09, 5	; 9
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <Response+0x6>
  ca:	4d 99       	sbic	0x09, 5	; 9
  cc:	fe cf       	rjmp	.-4      	; 0xca <Response+0xa>
  ce:	08 95       	ret

000000d0 <Receive_data>:
  d0:	88 e0       	ldi	r24, 0x08	; 8
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	4d 9b       	sbis	0x09, 5	; 9
  d6:	fe cf       	rjmp	.-4      	; 0xd4 <Receive_data+0x4>
  d8:	20 ea       	ldi	r18, 0xA0	; 160
  da:	2a 95       	dec	r18
  dc:	f1 f7       	brne	.-4      	; 0xda <Receive_data+0xa>
  de:	4d 9b       	sbis	0x09, 5	; 9
  e0:	07 c0       	rjmp	.+14     	; 0xf0 <Receive_data+0x20>
  e2:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
  e6:	22 0f       	add	r18, r18
  e8:	21 60       	ori	r18, 0x01	; 1
  ea:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <__data_end>
  ee:	05 c0       	rjmp	.+10     	; 0xfa <Receive_data+0x2a>
  f0:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <__data_end>
  f4:	22 0f       	add	r18, r18
  f6:	20 93 28 01 	sts	0x0128, r18	; 0x800128 <__data_end>
  fa:	4d 99       	sbic	0x09, 5	; 9
  fc:	fe cf       	rjmp	.-4      	; 0xfa <Receive_data+0x2a>
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	49 f7       	brne	.-46     	; 0xd4 <Receive_data+0x4>
 102:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end>
 106:	08 95       	ret

00000108 <TWI_Init>:
 108:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 10c:	8c e0       	ldi	r24, 0x0C	; 12
 10e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
 112:	84 e0       	ldi	r24, 0x04	; 4
 114:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 118:	08 95       	ret

0000011a <TWI_Start>:
 11a:	84 ea       	ldi	r24, 0xA4	; 164
 11c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 120:	ec eb       	ldi	r30, 0xBC	; 188
 122:	f0 e0       	ldi	r31, 0x00	; 0
 124:	80 81       	ld	r24, Z
 126:	88 23       	and	r24, r24
 128:	ec f7       	brge	.-6      	; 0x124 <TWI_Start+0xa>
 12a:	08 95       	ret

0000012c <TWI_Write>:
 12c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 130:	84 e8       	ldi	r24, 0x84	; 132
 132:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 136:	ec eb       	ldi	r30, 0xBC	; 188
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	88 23       	and	r24, r24
 13e:	ec f7       	brge	.-6      	; 0x13a <TWI_Write+0xe>
 140:	08 95       	ret

00000142 <I2C_LCD_Cmd>:
 142:	0f 93       	push	r16
 144:	1f 93       	push	r17
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	c8 2f       	mov	r28, r24
 14c:	d8 2f       	mov	r29, r24
 14e:	d0 7f       	andi	r29, 0xF0	; 240
 150:	80 e1       	ldi	r24, 0x10	; 16
 152:	c8 9f       	mul	r28, r24
 154:	80 01       	movw	r16, r0
 156:	11 24       	eor	r1, r1
 158:	0e 94 8d 00 	call	0x11a	; 0x11a <TWI_Start>
 15c:	8e e4       	ldi	r24, 0x4E	; 78
 15e:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 162:	8d 2f       	mov	r24, r29
 164:	8c 60       	ori	r24, 0x0C	; 12
 166:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 16a:	87 ec       	ldi	r24, 0xC7	; 199
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	01 97       	sbiw	r24, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <I2C_LCD_Cmd+0x2c>
 172:	00 c0       	rjmp	.+0      	; 0x174 <I2C_LCD_Cmd+0x32>
 174:	00 00       	nop
 176:	8d 2f       	mov	r24, r29
 178:	88 60       	ori	r24, 0x08	; 8
 17a:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 17e:	8f e8       	ldi	r24, 0x8F	; 143
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <I2C_LCD_Cmd+0x40>
 186:	00 c0       	rjmp	.+0      	; 0x188 <I2C_LCD_Cmd+0x46>
 188:	00 00       	nop
 18a:	80 2f       	mov	r24, r16
 18c:	8c 60       	ori	r24, 0x0C	; 12
 18e:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 192:	87 ec       	ldi	r24, 0xC7	; 199
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	01 97       	sbiw	r24, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <I2C_LCD_Cmd+0x54>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <I2C_LCD_Cmd+0x5a>
 19c:	00 00       	nop
 19e:	80 2f       	mov	r24, r16
 1a0:	88 60       	ori	r24, 0x08	; 8
 1a2:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 1a6:	84 e9       	ldi	r24, 0x94	; 148
 1a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 1ac:	c1 30       	cpi	r28, 0x01	; 1
 1ae:	31 f4       	brne	.+12     	; 0x1bc <I2C_LCD_Cmd+0x7a>
 1b0:	8f e3       	ldi	r24, 0x3F	; 63
 1b2:	9f e1       	ldi	r25, 0x1F	; 31
 1b4:	01 97       	sbiw	r24, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <I2C_LCD_Cmd+0x72>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <I2C_LCD_Cmd+0x78>
 1ba:	00 00       	nop
 1bc:	df 91       	pop	r29
 1be:	cf 91       	pop	r28
 1c0:	1f 91       	pop	r17
 1c2:	0f 91       	pop	r16
 1c4:	08 95       	ret

000001c6 <I2C_LCD_Chr>:
 1c6:	1f 93       	push	r17
 1c8:	cf 93       	push	r28
 1ca:	df 93       	push	r29
 1cc:	c4 2f       	mov	r28, r20
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	19 f0       	breq	.+6      	; 0x1d8 <I2C_LCD_Chr+0x12>
 1d2:	82 30       	cpi	r24, 0x02	; 2
 1d4:	31 f0       	breq	.+12     	; 0x1e2 <I2C_LCD_Chr+0x1c>
 1d6:	09 c0       	rjmp	.+18     	; 0x1ea <I2C_LCD_Chr+0x24>
 1d8:	8f e7       	ldi	r24, 0x7F	; 127
 1da:	86 0f       	add	r24, r22
 1dc:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
 1e0:	04 c0       	rjmp	.+8      	; 0x1ea <I2C_LCD_Chr+0x24>
 1e2:	8f eb       	ldi	r24, 0xBF	; 191
 1e4:	86 0f       	add	r24, r22
 1e6:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
 1ea:	1c 2f       	mov	r17, r28
 1ec:	10 7f       	andi	r17, 0xF0	; 240
 1ee:	80 e1       	ldi	r24, 0x10	; 16
 1f0:	c8 9f       	mul	r28, r24
 1f2:	e0 01       	movw	r28, r0
 1f4:	11 24       	eor	r1, r1
 1f6:	0e 94 8d 00 	call	0x11a	; 0x11a <TWI_Start>
 1fa:	8e e4       	ldi	r24, 0x4E	; 78
 1fc:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 200:	81 2f       	mov	r24, r17
 202:	8d 60       	ori	r24, 0x0D	; 13
 204:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 208:	87 ec       	ldi	r24, 0xC7	; 199
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	01 97       	sbiw	r24, 0x01	; 1
 20e:	f1 f7       	brne	.-4      	; 0x20c <I2C_LCD_Chr+0x46>
 210:	00 c0       	rjmp	.+0      	; 0x212 <I2C_LCD_Chr+0x4c>
 212:	00 00       	nop
 214:	81 2f       	mov	r24, r17
 216:	89 60       	ori	r24, 0x09	; 9
 218:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 21c:	8f e8       	ldi	r24, 0x8F	; 143
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <I2C_LCD_Chr+0x5a>
 224:	00 c0       	rjmp	.+0      	; 0x226 <I2C_LCD_Chr+0x60>
 226:	00 00       	nop
 228:	8c 2f       	mov	r24, r28
 22a:	8d 60       	ori	r24, 0x0D	; 13
 22c:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 230:	87 ec       	ldi	r24, 0xC7	; 199
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <I2C_LCD_Chr+0x6e>
 238:	00 c0       	rjmp	.+0      	; 0x23a <I2C_LCD_Chr+0x74>
 23a:	00 00       	nop
 23c:	8c 2f       	mov	r24, r28
 23e:	89 60       	ori	r24, 0x09	; 9
 240:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 244:	84 e9       	ldi	r24, 0x94	; 148
 246:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	1f 91       	pop	r17
 250:	08 95       	ret

00000252 <I2C_LCD_Init>:
 252:	0e 94 8d 00 	call	0x11a	; 0x11a <TWI_Start>
 256:	8e e4       	ldi	r24, 0x4E	; 78
 258:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 25c:	2f ef       	ldi	r18, 0xFF	; 255
 25e:	86 e7       	ldi	r24, 0x76	; 118
 260:	91 e0       	ldi	r25, 0x01	; 1
 262:	21 50       	subi	r18, 0x01	; 1
 264:	80 40       	sbci	r24, 0x00	; 0
 266:	90 40       	sbci	r25, 0x00	; 0
 268:	e1 f7       	brne	.-8      	; 0x262 <I2C_LCD_Init+0x10>
 26a:	00 c0       	rjmp	.+0      	; 0x26c <I2C_LCD_Init+0x1a>
 26c:	00 00       	nop
 26e:	8c e3       	ldi	r24, 0x3C	; 60
 270:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 274:	87 ec       	ldi	r24, 0xC7	; 199
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <I2C_LCD_Init+0x26>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <I2C_LCD_Init+0x2c>
 27e:	00 00       	nop
 280:	88 e3       	ldi	r24, 0x38	; 56
 282:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 286:	8f e3       	ldi	r24, 0x3F	; 63
 288:	9c e9       	ldi	r25, 0x9C	; 156
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <I2C_LCD_Init+0x38>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <I2C_LCD_Init+0x3e>
 290:	00 00       	nop
 292:	8c e3       	ldi	r24, 0x3C	; 60
 294:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 298:	87 ec       	ldi	r24, 0xC7	; 199
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	01 97       	sbiw	r24, 0x01	; 1
 29e:	f1 f7       	brne	.-4      	; 0x29c <I2C_LCD_Init+0x4a>
 2a0:	00 c0       	rjmp	.+0      	; 0x2a2 <I2C_LCD_Init+0x50>
 2a2:	00 00       	nop
 2a4:	88 e3       	ldi	r24, 0x38	; 56
 2a6:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 2aa:	8f e3       	ldi	r24, 0x3F	; 63
 2ac:	9c e9       	ldi	r25, 0x9C	; 156
 2ae:	01 97       	sbiw	r24, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <I2C_LCD_Init+0x5c>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <I2C_LCD_Init+0x62>
 2b4:	00 00       	nop
 2b6:	8c e3       	ldi	r24, 0x3C	; 60
 2b8:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 2bc:	87 ec       	ldi	r24, 0xC7	; 199
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	01 97       	sbiw	r24, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <I2C_LCD_Init+0x6e>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <I2C_LCD_Init+0x74>
 2c6:	00 00       	nop
 2c8:	88 e3       	ldi	r24, 0x38	; 56
 2ca:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 2ce:	8f e3       	ldi	r24, 0x3F	; 63
 2d0:	9c e9       	ldi	r25, 0x9C	; 156
 2d2:	01 97       	sbiw	r24, 0x01	; 1
 2d4:	f1 f7       	brne	.-4      	; 0x2d2 <I2C_LCD_Init+0x80>
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <I2C_LCD_Init+0x86>
 2d8:	00 00       	nop
 2da:	8c e2       	ldi	r24, 0x2C	; 44
 2dc:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 2e0:	87 ec       	ldi	r24, 0xC7	; 199
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <I2C_LCD_Init+0x92>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <I2C_LCD_Init+0x98>
 2ea:	00 00       	nop
 2ec:	88 e2       	ldi	r24, 0x28	; 40
 2ee:	0e 94 96 00 	call	0x12c	; 0x12c <TWI_Write>
 2f2:	84 e9       	ldi	r24, 0x94	; 148
 2f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2f8:	8f e3       	ldi	r24, 0x3F	; 63
 2fa:	9c e9       	ldi	r25, 0x9C	; 156
 2fc:	01 97       	sbiw	r24, 0x01	; 1
 2fe:	f1 f7       	brne	.-4      	; 0x2fc <I2C_LCD_Init+0xaa>
 300:	00 c0       	rjmp	.+0      	; 0x302 <I2C_LCD_Init+0xb0>
 302:	00 00       	nop
 304:	88 e2       	ldi	r24, 0x28	; 40
 306:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
 30a:	86 e0       	ldi	r24, 0x06	; 6
 30c:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
 310:	08 95       	ret

00000312 <I2C_LCD_Out>:
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	08 2f       	mov	r16, r24
 31c:	ea 01       	movw	r28, r20
 31e:	48 81       	ld	r20, Y
 320:	44 23       	and	r20, r20
 322:	51 f0       	breq	.+20     	; 0x338 <I2C_LCD_Out+0x26>
 324:	21 96       	adiw	r28, 0x01	; 1
 326:	11 e0       	ldi	r17, 0x01	; 1
 328:	16 0f       	add	r17, r22
 32a:	80 2f       	mov	r24, r16
 32c:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <I2C_LCD_Chr>
 330:	49 91       	ld	r20, Y+
 332:	61 2f       	mov	r22, r17
 334:	41 11       	cpse	r20, r1
 336:	f7 cf       	rjmp	.-18     	; 0x326 <I2C_LCD_Out+0x14>
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	1f 91       	pop	r17
 33e:	0f 91       	pop	r16
 340:	08 95       	ret

00000342 <main>:

int main()
{
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	00 d0       	rcall	.+0      	; 0x348 <main+0x6>
 348:	00 d0       	rcall	.+0      	; 0x34a <main+0x8>
 34a:	1f 92       	push	r1
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62

	DDRC = 0x00;
 350:	17 b8       	out	0x07, r1	; 7
	PORTC = 0x00;
 352:	18 b8       	out	0x08, r1	; 8

	char data[5];
	TWI_Init();
 354:	0e 94 84 00 	call	0x108	; 0x108 <TWI_Init>

	I2C_LCD_Init();
 358:	0e 94 29 01 	call	0x252	; 0x252 <I2C_LCD_Init>
	I2C_LCD_Cmd(_LCD_CURSOR_OFF);
 35c:	8c e0       	ldi	r24, 0x0C	; 12
 35e:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
	I2C_LCD_Cmd(_LCD_CLEAR);
 362:	81 e0       	ldi	r24, 0x01	; 1
 364:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>

	while(1)
	{
		Request();
 368:	0e 94 53 00 	call	0xa6	; 0xa6 <Request>
		Response();
 36c:	0e 94 60 00 	call	0xc0	; 0xc0 <Response>
		I_RH=Receive_data();	/* store first eight bit in I_RH */
 370:	0e 94 68 00 	call	0xd0	; 0xd0 <Receive_data>
 374:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <I_RH>
		D_RH=Receive_data();	/* store next eight bit in D_RH */
 378:	0e 94 68 00 	call	0xd0	; 0xd0 <Receive_data>
 37c:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <D_RH>
		I_Temp=Receive_data();	/* store next eight bit in I_Temp */
 380:	0e 94 68 00 	call	0xd0	; 0xd0 <Receive_data>
 384:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <I_Temp>
		D_Temp=Receive_data();	/* store next eight bit in D_Temp */
 388:	0e 94 68 00 	call	0xd0	; 0xd0 <Receive_data>
 38c:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <D_Temp>
		CheckSum=Receive_data();/* store next eight bit in CheckSum */
 390:	0e 94 68 00 	call	0xd0	; 0xd0 <Receive_data>
 394:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <CheckSum>
		
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
 398:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <I_RH>
 39c:	f0 e0       	ldi	r31, 0x00	; 0
 39e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <D_RH>
 3a2:	9f 01       	movw	r18, r30
 3a4:	29 0f       	add	r18, r25
 3a6:	31 1d       	adc	r19, r1
 3a8:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <I_Temp>
 3ac:	29 0f       	add	r18, r25
 3ae:	31 1d       	adc	r19, r1
 3b0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <D_Temp>
 3b4:	29 0f       	add	r18, r25
 3b6:	31 1d       	adc	r19, r1
 3b8:	48 2f       	mov	r20, r24
 3ba:	50 e0       	ldi	r21, 0x00	; 0
 3bc:	24 17       	cp	r18, r20
 3be:	35 07       	cpc	r19, r21
 3c0:	39 f0       	breq	.+14     	; 0x3d0 <main+0x8e>
		{
			I2C_LCD_Out(1,1,"Sensor ERROR");
 3c2:	40 e0       	ldi	r20, 0x00	; 0
 3c4:	51 e0       	ldi	r21, 0x01	; 1
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
 3ce:	38 c0       	rjmp	.+112    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
		}
		
		else
		{			
			itoa(I_RH,data,10);
 3d0:	4a e0       	ldi	r20, 0x0A	; 10
 3d2:	50 e0       	ldi	r21, 0x00	; 0
 3d4:	be 01       	movw	r22, r28
 3d6:	6f 5f       	subi	r22, 0xFF	; 255
 3d8:	7f 4f       	sbci	r23, 0xFF	; 255
 3da:	cf 01       	movw	r24, r30
 3dc:	0e 94 30 02 	call	0x460	; 0x460 <itoa>
			I2C_LCD_Out(1,1,"Humidity: ");
 3e0:	4d e0       	ldi	r20, 0x0D	; 13
 3e2:	51 e0       	ldi	r21, 0x01	; 1
 3e4:	61 e0       	ldi	r22, 0x01	; 1
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
			I2C_LCD_Out(1,11,data);
 3ec:	ae 01       	movw	r20, r28
 3ee:	4f 5f       	subi	r20, 0xFF	; 255
 3f0:	5f 4f       	sbci	r21, 0xFF	; 255
 3f2:	6b e0       	ldi	r22, 0x0B	; 11
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
			I2C_LCD_Out(1,13,"%");
 3fa:	48 e1       	ldi	r20, 0x18	; 24
 3fc:	51 e0       	ldi	r21, 0x01	; 1
 3fe:	6d e0       	ldi	r22, 0x0D	; 13
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>

			itoa(I_Temp,data,10);
 406:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <I_Temp>
 40a:	4a e0       	ldi	r20, 0x0A	; 10
 40c:	50 e0       	ldi	r21, 0x00	; 0
 40e:	be 01       	movw	r22, r28
 410:	6f 5f       	subi	r22, 0xFF	; 255
 412:	7f 4f       	sbci	r23, 0xFF	; 255
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 30 02 	call	0x460	; 0x460 <itoa>
			I2C_LCD_Out(2,1,"Temperat: ");
 41a:	4a e1       	ldi	r20, 0x1A	; 26
 41c:	51 e0       	ldi	r21, 0x01	; 1
 41e:	61 e0       	ldi	r22, 0x01	; 1
 420:	82 e0       	ldi	r24, 0x02	; 2
 422:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
			I2C_LCD_Out(2,11,data);
 426:	ae 01       	movw	r20, r28
 428:	4f 5f       	subi	r20, 0xFF	; 255
 42a:	5f 4f       	sbci	r21, 0xFF	; 255
 42c:	6b e0       	ldi	r22, 0x0B	; 11
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
			I2C_LCD_Out(2,13,"C");
 434:	45 e2       	ldi	r20, 0x25	; 37
 436:	51 e0       	ldi	r21, 0x01	; 1
 438:	6d e0       	ldi	r22, 0x0D	; 13
 43a:	82 e0       	ldi	r24, 0x02	; 2
 43c:	0e 94 89 01 	call	0x312	; 0x312 <I2C_LCD_Out>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 440:	2f ef       	ldi	r18, 0xFF	; 255
 442:	87 e8       	ldi	r24, 0x87	; 135
 444:	93 e1       	ldi	r25, 0x13	; 19
 446:	21 50       	subi	r18, 0x01	; 1
 448:	80 40       	sbci	r24, 0x00	; 0
 44a:	90 40       	sbci	r25, 0x00	; 0
 44c:	e1 f7       	brne	.-8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 450:	00 00       	nop
		}
		
		_delay_ms(400);
			I2C_LCD_Cmd(_LCD_CURSOR_OFF);
 452:	8c e0       	ldi	r24, 0x0C	; 12
 454:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
			I2C_LCD_Cmd(_LCD_CLEAR);
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	0e 94 a1 00 	call	0x142	; 0x142 <I2C_LCD_Cmd>
	}
 45e:	84 cf       	rjmp	.-248    	; 0x368 <main+0x26>

00000460 <itoa>:
 460:	45 32       	cpi	r20, 0x25	; 37
 462:	51 05       	cpc	r21, r1
 464:	20 f4       	brcc	.+8      	; 0x46e <itoa+0xe>
 466:	42 30       	cpi	r20, 0x02	; 2
 468:	10 f0       	brcs	.+4      	; 0x46e <itoa+0xe>
 46a:	0c 94 3b 02 	jmp	0x476	; 0x476 <__itoa_ncheck>
 46e:	fb 01       	movw	r30, r22
 470:	10 82       	st	Z, r1
 472:	cb 01       	movw	r24, r22
 474:	08 95       	ret

00000476 <__itoa_ncheck>:
 476:	bb 27       	eor	r27, r27
 478:	4a 30       	cpi	r20, 0x0A	; 10
 47a:	31 f4       	brne	.+12     	; 0x488 <__itoa_ncheck+0x12>
 47c:	99 23       	and	r25, r25
 47e:	22 f4       	brpl	.+8      	; 0x488 <__itoa_ncheck+0x12>
 480:	bd e2       	ldi	r27, 0x2D	; 45
 482:	90 95       	com	r25
 484:	81 95       	neg	r24
 486:	9f 4f       	sbci	r25, 0xFF	; 255
 488:	0c 94 47 02 	jmp	0x48e	; 0x48e <__utoa_common>

0000048c <__utoa_ncheck>:
 48c:	bb 27       	eor	r27, r27

0000048e <__utoa_common>:
 48e:	fb 01       	movw	r30, r22
 490:	55 27       	eor	r21, r21
 492:	aa 27       	eor	r26, r26
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	aa 1f       	adc	r26, r26
 49a:	a4 17       	cp	r26, r20
 49c:	10 f0       	brcs	.+4      	; 0x4a2 <__utoa_common+0x14>
 49e:	a4 1b       	sub	r26, r20
 4a0:	83 95       	inc	r24
 4a2:	50 51       	subi	r21, 0x10	; 16
 4a4:	b9 f7       	brne	.-18     	; 0x494 <__utoa_common+0x6>
 4a6:	a0 5d       	subi	r26, 0xD0	; 208
 4a8:	aa 33       	cpi	r26, 0x3A	; 58
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <__utoa_common+0x20>
 4ac:	a9 5d       	subi	r26, 0xD9	; 217
 4ae:	a1 93       	st	Z+, r26
 4b0:	00 97       	sbiw	r24, 0x00	; 0
 4b2:	79 f7       	brne	.-34     	; 0x492 <__utoa_common+0x4>
 4b4:	b1 11       	cpse	r27, r1
 4b6:	b1 93       	st	Z+, r27
 4b8:	11 92       	st	Z+, r1
 4ba:	cb 01       	movw	r24, r22
 4bc:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <strrev>

000004c0 <strrev>:
 4c0:	dc 01       	movw	r26, r24
 4c2:	fc 01       	movw	r30, r24
 4c4:	67 2f       	mov	r22, r23
 4c6:	71 91       	ld	r23, Z+
 4c8:	77 23       	and	r23, r23
 4ca:	e1 f7       	brne	.-8      	; 0x4c4 <strrev+0x4>
 4cc:	32 97       	sbiw	r30, 0x02	; 2
 4ce:	04 c0       	rjmp	.+8      	; 0x4d8 <strrev+0x18>
 4d0:	7c 91       	ld	r23, X
 4d2:	6d 93       	st	X+, r22
 4d4:	70 83       	st	Z, r23
 4d6:	62 91       	ld	r22, -Z
 4d8:	ae 17       	cp	r26, r30
 4da:	bf 07       	cpc	r27, r31
 4dc:	c8 f3       	brcs	.-14     	; 0x4d0 <strrev+0x10>
 4de:	08 95       	ret

000004e0 <_exit>:
 4e0:	f8 94       	cli

000004e2 <__stop_program>:
 4e2:	ff cf       	rjmp	.-2      	; 0x4e2 <__stop_program>
